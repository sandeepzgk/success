name: Build/release

on: push

jobs:
  release:
    runs-on: self-hosted
    permissions:
      contents: write
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-node@v2
        with:
          node-version: 21.7.1
                
      - if: matrix.os == 'ubuntu-latest'
        run: |
          echo "Running Linux specific steps"
          npm i
          npm run dist-linux
          echo "APPIMAGE_FILE=$(ls dist/*.AppImage)" >> $GITHUB_ENV
        shell: bash
      
      
      - name: Get Build Number
        if: matrix.os == 'ubuntu-latest'
        id: build_number
        uses: einaregilsson/build-number@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: matrix.os == 'ubuntu-latest'
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.build_number.outputs.build_number }}
          release_name: Release-${{ steps.build_number.outputs.build_number }}
          draft: false
          prerelease: false
      
 

      - name: Select Xcode Version
        if: matrix.os == 'mac-latest'
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '14.0.0'

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1     
        if: startsWith(matrix.os, 'macos') 
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}
          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
